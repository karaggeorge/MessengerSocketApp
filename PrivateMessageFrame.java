import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFrame;


public class PrivateMessageFrame extends JFrame {
	/**
     * Creates new form NewJFrame1
     */
	
	private String name;
	private MessengerClientController controller;
	
    public PrivateMessageFrame(String name, MessengerClientController controller) {
        initComponents();
        this.name = name;
        jLabel1.setText(name);
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
        	   public void windowClosing(WindowEvent evt) {
        	     controller.removePM(name);
        	   }
        	  });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        
        mArea = new JTextPane();
        mArea.setEditable(false);
        mArea.setText("");
       // mArea.setContentType("text/html");
        //mArea.setText("<html><span style=\"float:right;margin-left:70%;width:30%;background-color:#148BFC;border-radius:10px\"> asd </span></html>");
        doc = mArea.getStyledDocument();
        
        
        
        jScrollPane2.setViewportView(mArea);//jTextArea1);

        jTextField1.setText("Type your message here..");
        
        
        Action action = new AbstractAction()
        {
        	@Override
            public void actionPerformed(ActionEvent e)
            {
        		if(jTextField1.getText().equals("") || jTextField1.getText().equals("Type your message here..")) return;
        		controller.sendPM(name, jTextField1.getText());
        		//jTextArea1.append(jTextField1.getText() + "\n");
        		
        		//  Define a keyword attribute
        		SimpleAttributeSet keyWord = new SimpleAttributeSet();
        		StyleConstants.setForeground(keyWord, Color.WHITE);
        		StyleConstants.setBackground(keyWord, Color.decode("#148BFC"));
        		StyleConstants.setSpaceBelow(keyWord, (float)1.0);
        		StyleConstants.setFontSize(keyWord, 14);
        		//StyleConstants.setBold(keyWord, true);
        		StyleConstants.setAlignment(keyWord, StyleConstants.ALIGN_RIGHT);
        		int tmpl = doc.getLength();
        		//  Add some text
        		try
        		{
        		    doc.insertString(doc.getLength(), " " + jTextField1.getText() + " \n", keyWord );
        		}
        		catch(Exception exc) { 
        			System.out.println(exc);
        		}
        		doc.setParagraphAttributes(tmpl, jTextField1.getText().length(), keyWord, false);
			     jTextField1.setText("");
            }
        };
        jTextField1.addActionListener( action );
        jTextField1.addFocusListener(new FocusListener() {
			@Override
			public void focusGained(FocusEvent e) {
				// TODO Auto-generated method stub
				jTextField1.selectAll();
			}
			@Override
			public void focusLost(FocusEvent e) {
				// TODO Auto-generated method stub
				if(jTextField1.getText().equals("")){
					jTextField1.setText("Type your message here..");
				}
			}
        });

        jButton1.setText("Send");
        
        jButton1.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent e) {
				 if(jTextField1.getText().equals("") || jTextField1.getText().equals("Type your message here..")) return;
				 controller.sendPM(name, jTextField1.getText());
	        	jTextArea1.append(jTextField1.getText() + "\n");
			     jTextField1.setText("");
			  }
		});

        jLabel1.setText("Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setVisible(true);
    }// </editor-fold>                                                                   
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PrivateMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PrivateMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PrivateMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PrivateMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PrivateMessageFrame("Josh", new MessengerClientController()).setVisible(true);
//            }
//        });
//    }
    
    public String getName(){
    	return name;
    }
    
    public void messageReceived(String message){
    	//jTextArea1.append(name + ": " + message+"\n");
    //  Define a keyword attribute
		SimpleAttributeSet keyWord = new SimpleAttributeSet();
		StyleConstants.setForeground(keyWord, Color.BLACK);
		StyleConstants.setBackground(keyWord, Color.decode("#E6E5EB"));
		StyleConstants.setSpaceBelow(keyWord, (float)1.0);
		StyleConstants.setFontSize(keyWord, 14);
		//StyleConstants.setBold(keyWord, true);
		StyleConstants.setAlignment(keyWord, StyleConstants.ALIGN_LEFT);

		//  Add some text
		try
		{
		    doc.insertString(doc.getLength(), " " + message + " \n", keyWord );
		}
		catch(Exception exc) { 
			System.out.println(exc);
		}
    }

    // Variables declaration - do not modify
    private StyledDocument doc;
    private JTextPane mArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration            
}
